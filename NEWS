New in 5.2:

 * shoving around of code for better comprehension of the code
 * fixed fix from 5.1.1
 * mailsync shouldn't possibly be messing with flags at all if the
   mailbox (IMAP f.ex) allows it.
 * support for Linux-lib64 by Heiko Rommel
 * fixed problem when retrieving delimiter
 * not exiting any more on stores without subdirs
 * lasttimes were not computed correctly - this could result in a message
   being retransmitted if deleted on one side
 * not deleting duplicate messages with empty Message-IDs
   (thanks Kunal Chavan for bugreport)
 * removed [] around config.h in configure.ac - this was causing problems for
   Akkana Peck for unknown reasons
 * don't show message IDs by default
 * don't delete duplicate messages with empty Message-IDs
 * we require automake > 1.6 or else we'll complain (thanks Michael, Akkana, Eric!)
 * added HACKING file
 * more verbose error message when c-client is linked against kerberos, but kerberos is not installed
 * small compilation fixes (thanks Heiko)
 * checking for and adding libcrypt to LIBS
 * added workflow diagrams showing when mail_open is used with what options
 * -n has a new meaning: do not delete messages
 * move c-client.h to its own include file, so that we can clean up the
   mess it makes in a single place (idea Michael)
 * since there were so many changes, renaming as 5.2
 * BETA RELEASED
 
New in 5.1.1:

 * not properly expunging emails fixed (Michael fix, Bob testing)
   visible with #mh folders
 
New in 5.1.0:

 * option to use md5 hashes of headers as msg ids and/or along with
   the msgid in the message header (patch by Bob Lindell, adaptation me)
 * warn about empty Message-IDs when using the default msg id algorithm.
 * document md5 vs Message-ID in the README
 * -di debug/log IMAP telemetry/protocol
 * -dc debug configuration
 * fix copy/paste bug in ac_with_md5.m4 (Michael, bug by me :-/)
 * fix rubbuish deletion in dist-hook
 * fixed traversing some boxes twice

New in 5.0.0:

 * completely reengineered:
   - really object oriented
   - grouped sources together that belong together
   - simplified a lot of things
 * it should be possible to sync stores which contain folders with messages
   _and_ submailfolders. However if two stores do not _both_ allow messages
   _and_ subfolders in folders at the same time, submailboxes will
   be created first and messages in folders that contain subfolders will
   no be synchronized! (Detlef Vollmann helped with C++ quirks)
 * build fixes by Michael
 * documented diff mode
 * Solaris autoconf by Michael, Heiner Steven and anonymous (thanks to all ;-)
 * mailsync forgetting to purge local stores (problem occurs with #mh boxes)
   fix by Michael
 
New in 4.5.4:

 * removed acinclude.m4 (Krelin's code-beautycenter, me)
 * checking right at the start if we've found any boxes to sync
 * added courier example with foldername including spaces
   (upon Gonzalo G. Agulló's confusion)
 * splitted up sources
 * removed forward references in code

New in 4.5.3:

 * automatic detection whether -fno-operator-names is necessary
   (bugreport Wolfgang, implementation *Michael*)

New in 4.5.2:

 * added RH's c-client location (thanks Wolfgang Sailer)

New in 4.5.1:

 * fixed build procedure description in REAME (thanks Wolfgang Sailer)

New in 4.5:

 * Simulate option
 * fixed mapage
 * sizelimit option for channel contributed by Michael Krelin
 * minimaly better error handling
 * reads in and initializes c-client configuration
 * bugfixes for prefixes that exactly match the mailbox name
   and therefore end up empty by Michael
 * msinfo format documented
 * a little simpler msinfo parsing
 * added #mh mail format example
 * added Michael's #mh over ssh example
 * automatically setting -m when listing store. Bugreport by Andre Srinivasan
 * autoconfiguration by Michael

New in 4.4.4:

 * Check every fetch operation for success
 * documented the fact that mailsync is not really fit for concurrent
   mailbox access
 * extended loging
 * reengineering - clearer naming of variables (I hope)
                 - int msgno -> unsigned long msgno (as in c-client)
                 - functions and variables that return/contain only true/false
                   are now booleans

New in 4.4.3:

 * do not copy deleted mails

New in 4.4.2:

 * documented list mode
 * list mode can display contents of mailboxes
 * more docu
 * reordered code to make it more coherent (IMHO)
 * various functions (fetch_mail_ids, tdc_mail_open) had too many crucial
   side effects which made the code very hard to follow. Untangled that.
 * closing a stream before writing in it (c-client logic!) so that new
   messages are not marked as seen. That means, that mutt users should be
   happy(er?) now.

New in 4.4.1:

 * more explicit and consistent error messages, more sensible debug output
 * documented the code and renamed stuff so that it makes sense
 * messages-ids are sanitized and saved in RFC822 format only.
 * warnings about spaces in the message id are now optional, see the "-bd"
   option
 * fixed a bug that occured when files were copied over but could not be saved
   for some reason

New in 4.2.3 to 4.3.1:

 * bugfixes, docu fixes - see debian/changelog

New in 4.2.2:

 * password can be set in stores/channel

New in 4.2.1:

 * recursive copying should work now

 * comments in config files

 * minor bugfixes and cleanups

New in 4:

 * If the same new message is in both stores, it's left alone.
   (mailsync-3 would copy it in both directions, wasting bandwidth and
   creating duplicates).

 * Now makes a single pass through each mailbox instead of two.  This
   reduces network bandwidth (though probably only a little, not by 50%).

 * Can handle either or both stores being empty.

 * List mode ("mailsync store") and diff mode ("mailsync store
   channel") fixed.  Diff mode no longer removes duplicates.

 * The per-mailbox summary lines ("foo: 1 deleted, 30 remain") now
   appear before the copying & deleting are done.  So if you see 
   "foo: 4384 copied local->remote" you can hit ^C sooner.

 * Now mailsync is a C++ program.  Reduced from 2000 lines of code to
   1200.  Data formats (.mailsync and msinfo) remain unchanged.  Fewer
   memory leaks and less opportunity for buffer overflows (though I don't
   know of any in mailsync-3).
